"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8728],{8728:function(e,a,n){n.r(a),n(3696);var t=n(1445);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)({}).hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},r.apply(null,arguments)}function s(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",r({components:a},n),(0,t.yg)("p",null,"Webpack is capable of adding a ",(0,t.yg)("inlineCode",{parentName:"p"},"nonce")," to all scripts that it loads. To activate this feature, set a ",(0,t.yg)("inlineCode",{parentName:"p"},"__webpack_nonce__")," variable and include it in your entry script. A unique hash-based ",(0,t.yg)("inlineCode",{parentName:"p"},"nonce")," will then be generated and provided for each unique page view (this is why ",(0,t.yg)("inlineCode",{parentName:"p"},"__webpack_nonce__")," is specified in the entry file and not in the configuration). Please note that the ",(0,t.yg)("inlineCode",{parentName:"p"},"__webpack_nonce__")," should always be a base64-encoded string."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"examples",parentName:"h2"}),"Examples",(0,t.yg)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"In the entry file:"),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,t.yg)("span",{className:"token comment",parentName:"code"},"// ..."),"\n__webpack_nonce__ ",(0,t.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,t.yg)("span",{className:"token string",parentName:"code"},"'c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM='"),(0,t.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,t.yg)("span",{className:"token comment",parentName:"code"},"// ..."))),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"enabling-csp",parentName:"h2"}),"Enabling CSP",(0,t.yg)("a",{href:"#enabling-csp","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Please note that CSPs are not enabled by default. A corresponding header ",(0,t.yg)("inlineCode",{parentName:"p"},"Content-Security-Policy")," or meta tag ",(0,t.yg)("inlineCode",{parentName:"p"},'<meta http-equiv="Content-Security-Policy" ...>')," needs to be sent with the document to instruct the browser to enable the CSP. Here's an example of what a CSP header including a CDN white-listed URL might look like:"),(0,t.yg)("pre",null,(0,t.yg)("code",{className:"hljs language-html",parentName:"pre"},"Content-Security-Policy: default-src 'self'; script-src 'self'\nhttps://trusted.cdn.com;")),(0,t.yg)("p",null,"For more information on CSP and ",(0,t.yg)("inlineCode",{parentName:"p"},"nonce")," attribute, please refer to ",(0,t.yg)("strong",{parentName:"p"},"Further Reading")," section at the bottom of this page."),(0,t.yg)("h2",null,(0,t.yg)("span",{id:"trusted-types",parentName:"h2"}),"Trusted Types",(0,t.yg)("a",{href:"#trusted-types","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,t.yg)("span",{className:"header-link",parentName:"a"}))),(0,t.yg)("p",null,"Webpack is also capable of using Trusted Types to load dynamically constructed scripts, to adhere to CSP ",(0,t.yg)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"require-trusted-types-for"))," directive restrictions. See ",(0,t.yg)("a",{href:"/configuration/output/#outputtrustedtypes",parentName:"p"},(0,t.yg)("inlineCode",{parentName:"a"},"output.trustedTypes"))," configuration option."))}s.isMDXComponent=!0,a.default=s}}]);