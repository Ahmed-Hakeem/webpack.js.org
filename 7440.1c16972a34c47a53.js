"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7440],{7440:function(e,a,n){n.r(a),n(3696);var s=n(1445);function p(){return p=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var s in n)({}).hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},p.apply(null,arguments)}function t(e){let{components:a,...n}=e;return(0,s.yg)("wrapper",p({components:a},n),(0,s.yg)("p",null,"The ",(0,s.yg)("inlineCode",{parentName:"p"},"webpack")," compiler can understand modules written as ES2015 modules, CommonJS or AMD. However, some third party libraries may expect global dependencies (e.g. ",(0,s.yg)("inlineCode",{parentName:"p"},"$")," for ",(0,s.yg)("inlineCode",{parentName:"p"},"jQuery"),'). The libraries might also create globals which need to be exported. These "broken modules" are one instance where ',(0,s.yg)("em",{parentName:"p"},"shimming")," comes into play."),(0,s.yg)("aside",{className:"warning"},(0,s.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,s.yg)("p",{parentName:"aside"},(0,s.yg)("strong",{parentName:"p"},"We don't recommend using globals!")," The whole concept behind webpack is to allow more modular front-end development. This means writing isolated modules that are well contained and do not rely on hidden dependencies (e.g. globals). Please use these features only when necessary.")),(0,s.yg)("p",null,"Another instance where ",(0,s.yg)("em",{parentName:"p"},"shimming")," can be useful is when you want to ",(0,s.yg)("a",{href:"https://en.wikipedia.org/wiki/Polyfill_%28programming%29",parentName:"p"},"polyfill")," browser functionality to support more users. In this case, you may only want to deliver those polyfills to the browsers that need patching (i.e. load them on demand)."),(0,s.yg)("p",null,"The following article will walk through both of these use cases."),(0,s.yg)("aside",{className:"tip"},(0,s.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,s.yg)("p",{parentName:"aside"},"For simplicity, this guide stems from the examples in ",(0,s.yg)("a",{href:"/guides/getting-started",parentName:"p"},"Getting Started"),". Please make sure you are familiar with the setup there before moving on.")),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"shimming-globals",parentName:"h2"}),"Shimming Globals",(0,s.yg)("a",{href:"#shimming-globals","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Let's start with the first use case of shimming global variables. Before we do anything let's take another look at our project:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"project")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},"webpack-demo\n|- package.json\n|- package-lock.json\n|- webpack.config.js\n|- /dist\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- index.html\n")),"|- /src\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- index.js\n")),"|- /node_modules")),(0,s.yg)("p",null,"Remember that ",(0,s.yg)("inlineCode",{parentName:"p"},"lodash")," package we were using? For demonstration purposes, let's say we wanted to instead provide this as a global throughout our application. To do this, we can use ",(0,s.yg)("inlineCode",{parentName:"p"},"ProvidePlugin"),"."),(0,s.yg)("p",null,"The ",(0,s.yg)("a",{href:"/plugins/provide-plugin",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"ProvidePlugin"))," makes a package available as a variable in every module compiled through webpack. If webpack sees that variable used, it will include the given package in the final bundle. Let's go ahead by removing the ",(0,s.yg)("inlineCode",{parentName:"p"},"import")," statement for ",(0,s.yg)("inlineCode",{parentName:"p"},"lodash")," and instead provide it via the plugin:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/index.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"import _ from 'lodash';\n"),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  // Lodash, now imported by this script\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"const webpack = require('webpack');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: 'main.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.ProvidePlugin({\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      _: 'lodash',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,"What we've essentially done here is tell webpack..."),(0,s.yg)("blockquote",null,(0,s.yg)("p",{parentName:"blockquote"},"If you encounter at least one instance of the variable ",(0,s.yg)("inlineCode",{parentName:"p"},"_"),", include the ",(0,s.yg)("inlineCode",{parentName:"p"},"lodash")," package and provide it to the modules that need it.")),(0,s.yg)("p",null,"If we run a build, we should still see the same output:"),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-bash",parentName:"pre"},"$ ",(0,s.yg)("span",{className:"token function",parentName:"code"},"npm")," run build\n\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},".."),"\n\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"webpack-cli",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," Compilation finished\nasset main.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"69.1")," KiB ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"emitted",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"minimized",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),"name: main",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"1")," related asset\nruntime modules ",(0,s.yg)("span",{className:"token number",parentName:"code"},"344")," bytes ",(0,s.yg)("span",{className:"token number",parentName:"code"},"2")," modules\ncacheable modules ",(0,s.yg)("span",{className:"token number",parentName:"code"},"530")," KiB\n  ./src/index.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"191")," bytes ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,s.yg)("span",{className:"token number",parentName:"code"},"530")," KiB ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"built",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"["),"code generated",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"]"),"\nwebpack ",(0,s.yg)("span",{className:"token number",parentName:"code"},"5.4"),".0 compiled successfully ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"in")," ",(0,s.yg)("span",{className:"token number",parentName:"code"},"2910")," ms")),(0,s.yg)("p",null,"We can also use the ",(0,s.yg)("inlineCode",{parentName:"p"},"ProvidePlugin"),' to expose a single export of a module by configuring it with an "array path" (e.g. ',(0,s.yg)("inlineCode",{parentName:"p"},"[module, child, ...children?]"),"). So let's imagine we only wanted to provide the ",(0,s.yg)("inlineCode",{parentName:"p"},"join")," method from ",(0,s.yg)("inlineCode",{parentName:"p"},"lodash")," wherever it's invoked:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/index.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const webpack = require('webpack');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: 'main.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.ProvidePlugin({\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      _: 'lodash',\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      join: ['lodash', 'join'],\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,"This would go nicely with ",(0,s.yg)("a",{href:"/guides/tree-shaking",parentName:"p"},"Tree Shaking")," as the rest of the ",(0,s.yg)("inlineCode",{parentName:"p"},"lodash")," library should get dropped."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"granular-shimming",parentName:"h2"}),"Granular Shimming",(0,s.yg)("a",{href:"#granular-shimming","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Some legacy modules rely on ",(0,s.yg)("inlineCode",{parentName:"p"},"this")," being the ",(0,s.yg)("inlineCode",{parentName:"p"},"window")," object. Let's update our ",(0,s.yg)("inlineCode",{parentName:"p"},"index.js")," so this is the case:"),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  // Assume we are in the context of `window`\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'  this.alert("Hmmm, this probably isn\'t a great idea...");\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,s.yg)("p",null,"This becomes a problem when the module is executed in a CommonJS context where ",(0,s.yg)("inlineCode",{parentName:"p"},"this")," is equal to ",(0,s.yg)("inlineCode",{parentName:"p"},"module.exports"),". In this case you can override ",(0,s.yg)("inlineCode",{parentName:"p"},"this")," using the ",(0,s.yg)("a",{href:"/loaders/imports-loader/",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"imports-loader")),":"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const webpack = require('webpack');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: 'main.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  module: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    rules: [\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        test: require.resolve('./src/index.js'),\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        use: 'imports-loader?wrapper=window',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      },\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    ],\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.ProvidePlugin({\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      join: ['lodash', 'join'],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"global-exports",parentName:"h2"}),"Global Exports",(0,s.yg)("a",{href:"#global-exports","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Let's say a library creates a global variable that it expects its consumers to use. We can add a small module to our setup to demonstrate this:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"project")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," webpack-demo\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- package.json\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- package-lock.json\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- webpack.config.js\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /dist\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /src\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- index.js\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- globals.js\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /node_modules")))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/globals.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,s.yg)("span",{className:"token keyword",parentName:"code"},"const")," file ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'blah.txt'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"const")," helpers ",(0,s.yg)("span",{className:"token operator",parentName:"code"},"=")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,s.yg)("span",{className:"token function-variable function",parentName:"code"},"test"),(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    console",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"log"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'test something'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,s.yg)("span",{className:"token function-variable function",parentName:"code"},"parse"),(0,s.yg)("span",{className:"token operator",parentName:"code"},":")," ",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"function")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    console",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"."),(0,s.yg)("span",{className:"token function",parentName:"code"},"log"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"("),(0,s.yg)("span",{className:"token string",parentName:"code"},"'parse something'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},")"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n  ",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,s.yg)("span",{className:"token punctuation",parentName:"code"},"}"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,"Now, while you'd likely never do this in your own source code, you may encounter a dated library you'd like to use that contains similar code to what's shown above. In this case, we can use ",(0,s.yg)("a",{href:"/loaders/exports-loader/",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"exports-loader")),", to export that global variable as a normal module export. For instance, in order to export ",(0,s.yg)("inlineCode",{parentName:"p"},"file")," as ",(0,s.yg)("inlineCode",{parentName:"p"},"file")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"helpers.parse")," as ",(0,s.yg)("inlineCode",{parentName:"p"},"parse"),":"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const webpack = require('webpack');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: 'main.js',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  module: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    rules: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"        test: require.resolve('./src/index.js'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"        use: 'imports-loader?wrapper=window',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      },\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        test: require.resolve('./src/globals.js'),\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        use:\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"          'exports-loader?type=commonjs&exports=file,multiple|helpers.parse|parse',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      },\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.ProvidePlugin({\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      join: ['lodash', 'join'],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,"Now from within our entry script (i.e. ",(0,s.yg)("inlineCode",{parentName:"p"},"src/index.js"),"), we could use ",(0,s.yg)("inlineCode",{parentName:"p"},"const { file, parse } = require('./globals.js');")," and all should work smoothly."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"loading-polyfills",parentName:"h2"}),"Loading Polyfills",(0,s.yg)("a",{href:"#loading-polyfills","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Almost everything we've discussed thus far has been in relation to handling legacy packages. Let's move on to our second topic: ",(0,s.yg)("strong",{parentName:"p"},"polyfills"),"."),(0,s.yg)("p",null,"There's a lot of ways to load polyfills. For example, to include the ",(0,s.yg)("a",{href:"https://babeljs.io/docs/en/babel-polyfill/",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"babel-polyfill"))," we might:"),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-bash",parentName:"pre"},(0,s.yg)("span",{className:"token function",parentName:"code"},"npm")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"install")," --save babel-polyfill")),(0,s.yg)("p",null,"and ",(0,s.yg)("inlineCode",{parentName:"p"},"import")," it so as to include it in our main bundle:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/index.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"import 'babel-polyfill';\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  // Assume we are in the context of `window`\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'  this.alert("Hmmm, this probably isn\'t a great idea...");\n')),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,s.yg)("aside",{className:"tip"},(0,s.yg)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,s.yg)("p",{parentName:"aside"},"Note that we aren't binding the ",(0,s.yg)("inlineCode",{parentName:"p"},"import")," to a variable. This is because polyfills run on their own, prior to the rest of the code base, allowing us to then assume certain native functionality exists.")),(0,s.yg)("p",null,"Note that this approach prioritizes correctness over bundle size. To be safe and robust, polyfills/shims must run ",(0,s.yg)("strong",{parentName:"p"},"before all other code"),', and thus either need to load synchronously, or, all app code needs to load after all polyfills/shims load.\nThere are many misconceptions in the community, as well, that modern browsers "don\'t need" polyfills, or that polyfills/shims merely serve to add missing features - in fact, they often ',(0,s.yg)("em",{parentName:"p"},"repair broken implementations"),", even in the most modern of browsers.\nThe best practice thus remains to unconditionally and synchronously load all polyfills/shims, despite the bundle size cost this incurs."),(0,s.yg)("p",null,"If you feel that you have mitigated these concerns and wish to incur the risk of brokenness, here's one way you might do it:\nLet's move our ",(0,s.yg)("inlineCode",{parentName:"p"},"import")," to a new file and add the ",(0,s.yg)("a",{href:"https://github.com/github/fetch",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"whatwg-fetch"))," polyfill:"),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-bash",parentName:"pre"},(0,s.yg)("span",{className:"token function",parentName:"code"},"npm")," ",(0,s.yg)("span",{className:"token function",parentName:"code"},"install")," --save whatwg-fetch")),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/index.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"import 'babel-polyfill';\n"),(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  // Assume we are in the context of `window`\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'  this.alert("Hmmm, this probably isn\'t a great idea...");\n')),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());")))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"project")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," webpack-demo\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- package.json\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- package-lock.json\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- webpack.config.js\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /dist\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /src\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- index.js\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- globals.js\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"   |- polyfills.js\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"}," |- /node_modules")))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/polyfills.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-javascript",parentName:"pre"},(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'babel-polyfill'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'whatwg-fetch'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"webpack.config.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const path = require('path');\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"const webpack = require('webpack');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"module.exports = {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: './src/index.js',\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  entry: {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    polyfills: './src/polyfills',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    index: './src/index.js',\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  output: {\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: 'main.js',\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    filename: '[name].bundle.js',\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    path: path.resolve(__dirname, 'dist'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  module: {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    rules: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"        test: require.resolve('./src/index.js'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"        use: 'imports-loader?wrapper=window',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"        test: require.resolve('./src/globals.js'),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"        use:\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"          'exports-loader?type=commonjs&exports[]=file&exports[]=multiple|helpers.parse|parse',\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  },\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  plugins: [\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    new webpack.ProvidePlugin({\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"      join: ['lodash', 'join'],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    }),\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  ],\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"};")))),(0,s.yg)("p",null,"With that in place, we can add the logic to conditionally load our new ",(0,s.yg)("inlineCode",{parentName:"p"},"polyfills.bundle.js")," file. How you make this decision depends on the technologies and browsers you need to support. We'll do some testing to determine whether our polyfills are needed:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"dist/index.html")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"<!DOCTYPE html>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"<html>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  <head>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <meta charset="utf-8" />\n'),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"    <title>Getting Started</title>\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    <script>\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      const modernBrowser = 'fetch' in window && 'assign' in Object;\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      if (!modernBrowser) {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        const scriptElement = document.createElement('script');\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        scriptElement.async = false;\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        scriptElement.src = '/polyfills.bundle.js';\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"        document.head.appendChild(scriptElement);\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"      }\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    <\/script>\n")),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  </head>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  <body>\n")),(0,s.yg)("span",{className:"token deleted-sign deleted",parentName:"code"},(0,s.yg)("span",{className:"token prefix deleted",parentName:"span"},"-"),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <script src="main.js"><\/script>\n')),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'    <script src="index.bundle.js"><\/script>\n')),(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  </body>\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"</html>")))),(0,s.yg)("p",null,"Now we can ",(0,s.yg)("inlineCode",{parentName:"p"},"fetch")," some data within our entry script:"),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"src/index.js")),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-diff",parentName:"pre"},(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"function component() {\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  const element = document.createElement('div');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  element.innerHTML = join(['Hello', 'webpack'], ' ');\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  // Assume we are in the context of `window`\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},'  this.alert("Hmmm, this probably isn\'t a great idea...");\n')),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"  return element;\n"),(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"}\n")),"\n",(0,s.yg)("span",{className:"token unchanged",parentName:"code"},(0,s.yg)("span",{className:"token prefix unchanged",parentName:"span"}," "),(0,s.yg)("span",{className:"token line",parentName:"span"},"document.body.appendChild(component());\n")),(0,s.yg)("span",{className:"token inserted-sign inserted",parentName:"code"},(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"fetch('https://jsonplaceholder.typicode.com/users')\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  .then((response) => response.json())\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  .then((json) => {\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    console.log(\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},'      "We retrieved some data! AND we\'re confident it will work on a variety of browser distributions."\n'),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    );\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    console.log(json);\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  })\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  .catch((error) =>\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"    console.error('Something went wrong when fetching this data: ', error)\n"),(0,s.yg)("span",{className:"token prefix inserted",parentName:"span"},"+"),(0,s.yg)("span",{className:"token line",parentName:"span"},"  );")))),(0,s.yg)("p",null,"If we run our build, another ",(0,s.yg)("inlineCode",{parentName:"p"},"polyfills.bundle.js")," file will be emitted and everything should still run smoothly in the browser. Note that this set up could likely be improved upon but it should give you a good idea of how you can provide polyfills only to the users that actually need them."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"further-optimizations",parentName:"h2"}),"Further Optimizations",(0,s.yg)("a",{href:"#further-optimizations","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"The ",(0,s.yg)("inlineCode",{parentName:"p"},"babel-preset-env")," package uses ",(0,s.yg)("a",{href:"https://github.com/browserslist/browserslist",parentName:"p"},"browserslist")," to transpile only what is not supported in your browsers matrix. This preset comes with the ",(0,s.yg)("a",{href:"https://babeljs.io/docs/en/babel-preset-env#usebuiltins",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"useBuiltIns"))," option, ",(0,s.yg)("inlineCode",{parentName:"p"},"false")," by default, which converts your global ",(0,s.yg)("inlineCode",{parentName:"p"},"babel-polyfill")," import to a more granular feature by feature ",(0,s.yg)("inlineCode",{parentName:"p"},"import")," pattern:"),(0,s.yg)("pre",null,(0,s.yg)("code",{className:"hljs language-js",parentName:"pre"},(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'core-js/modules/es7.string.pad-start'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'core-js/modules/es7.string.pad-end'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'core-js/modules/web.timers'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'core-js/modules/web.immediate'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,s.yg)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,s.yg)("span",{className:"token string",parentName:"code"},"'core-js/modules/web.dom.iterable'"),(0,s.yg)("span",{className:"token punctuation",parentName:"code"},";"))),(0,s.yg)("p",null,"See ",(0,s.yg)("a",{href:"https://babeljs.io/docs/en/babel-preset-env",parentName:"p"},"the babel-preset-env documentation")," for more information."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"node-built-ins",parentName:"h2"}),"Node Built-Ins",(0,s.yg)("a",{href:"#node-built-ins","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"Node built-ins, like ",(0,s.yg)("inlineCode",{parentName:"p"},"process"),", can be polyfilled right directly from your configuration file without the use of any special loaders or plugins. See the ",(0,s.yg)("a",{href:"/configuration/node",parentName:"p"},"node configuration page")," for more information and examples."),(0,s.yg)("h2",null,(0,s.yg)("span",{id:"other-utilities",parentName:"h2"}),"Other Utilities",(0,s.yg)("a",{href:"#other-utilities","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,s.yg)("span",{className:"header-link",parentName:"a"}))),(0,s.yg)("p",null,"There are a few other tools that can help when dealing with legacy modules."),(0,s.yg)("p",null,"When there is no AMD/CommonJS version of the module and you want to include the ",(0,s.yg)("inlineCode",{parentName:"p"},"dist"),", you can flag this module in ",(0,s.yg)("a",{href:"/configuration/module/#modulenoparse",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"noParse")),". This will cause webpack to include the module without parsing it or resolving ",(0,s.yg)("inlineCode",{parentName:"p"},"require()")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"import")," statements. This practice is also used to improve the build performance."),(0,s.yg)("aside",{className:"warning"},(0,s.yg)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,s.yg)("p",{parentName:"aside"},"Any feature requiring the AST, like the ",(0,s.yg)("inlineCode",{parentName:"p"},"ProvidePlugin"),", will not work.")),(0,s.yg)("p",null,"Lastly, there are some modules that support multiple ",(0,s.yg)("a",{href:"/concepts/modules",parentName:"p"},"module styles"),"; e.g. a combination of AMD, CommonJS, and legacy. In most of these cases, they first check for ",(0,s.yg)("inlineCode",{parentName:"p"},"define")," and then use some quirky code to export properties. In these cases, it could help to force the CommonJS path by setting ",(0,s.yg)("inlineCode",{parentName:"p"},"additionalCode=var%20define%20=%20false;")," via the ",(0,s.yg)("a",{href:"/loaders/imports-loader/",parentName:"p"},(0,s.yg)("inlineCode",{parentName:"a"},"imports-loader")),"."))}t.isMDXComponent=!0,a.default=t}}]);